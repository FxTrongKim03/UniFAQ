// UniFAQ/hooks/useFaqData.js

// S·ª≠ d·ª•ng "Singleton" pattern ƒë·ªÉ ch·ªâ fetch 1 l·∫ßn
let faqsCache = null;
let fetchPromise = null;

async function loadFaqs() {
    if (faqsCache) return faqsCache;
    if (fetchPromise) return fetchPromise;

    console.log('üîÑ [useFaqData] Fetching FAQs from API...');
    const apiUrl = 'http://localhost:3001/api/faqs'; // URL backend

    fetchPromise = fetch(apiUrl)
        .then(response => {
            if (!response.ok) throw new Error(`API Error! Status: ${response.status}`);
            return response.json();
        })
        .then(data => {
            if (!Array.isArray(data)) throw new Error('API did not return an array');
            faqsCache = data;
            console.log(`‚úÖ [useFaqData] FAQs loaded from API: ${faqsCache.length}`);
            fetchPromise = null;
            return faqsCache;
        })
        .catch(error => {
            console.error('‚ùå [useFaqData] Fetch API failed:', error);
            fetchPromise = null;
            return [];
        });
    return fetchPromise;
}

async function getFaqs() {
    if (faqsCache) {
        return faqsCache;
    }
    return await loadFaqs();
}

// Export c√°c h√†m
// (V√¨ ch√∫ng ta kh√¥ng d√πng module bundler, ch√∫ng ta s·∫Ω g·∫Øn n√≥ v√†o `window`)
window.useFaqData = {
    loadFaqs,
    getFaqs
};